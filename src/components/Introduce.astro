---
title: "Introduce"

import SplitText from "./animations/SplitText/SplitText.tsx";
import Skill from "./Skill.astro";
import Project from "./Project.astro";
import About from "./About.astro";
import { Icon } from "astro-icon/components";

const { isName } = Astro.props;
const trueName = isName == "true";
---
<div class="max-w-6xl mx-auto md:px-2 px-6 pt-12 pb-6">
    <div class="text-center mb-12">
        <SplitText
            client:load
            text={ trueName ? "髙藏 駿之" : "LiverHawk"}
            className="text-5xl font-bold text-center bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text"
            delay={100}
            duration={0.6}
            ease="power3.out"
            splitType="chars"
            from={{ opacity: 0, y: 40 }}
            to={{ opacity: 1, y: 0 }}
            threshold={0.1}
            rootMargin="-100px"
            textAlign="center"
        />
        <p class="mt-6 text-lg text-gray-600 dark:text-gray-400 leading-relaxed max-w-2xl mx-auto">
            I'm a software engineer with a passion for building web applications.
            <br />
            And I'm a graduate student at the Osaka Metropolitan University.
        </p>
    </div>
    <div class="space-y-12">
        <section class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-8 transition-all hover:shadow-xl">
            <div class="flex space-x-4 mb-8 border-b border-gray-200 dark:border-gray-700 flex-col sm:flex-row">
                <button
                    class="px-6 py-3 text-lg font-medium text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 border-b-2 border-transparent hover:border-blue-600 dark:hover:border-blue-400 transition-colors"
                    data-tab="skills"
                >
                    スキル
                </button>
                <button
                    class="px-6 py-3 text-lg font-medium text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 border-b-2 border-transparent hover:border-blue-600 dark:hover:border-blue-400 transition-colors"
                    data-tab="projects"
                >
                    プロジェクト
                </button>
                <button
                    class="px-6 py-3 text-lg font-medium text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 border-b-2 border-transparent hover:border-blue-600 dark:hover:border-blue-400 transition-colors"
                    data-tab="about"
                >
                    自己紹介
                </button>
                <button
                    class="px-6 py-3 text-lg font-medium text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 border-b-2 border-transparent hover:border-blue-600 dark:hover:border-blue-400 transition-colors"
                >
                
                    <a href="https://blog.purple-hawk.com" target="_blank" rel="noopener noreferrer" class="flex items-center gap-x-2">
                        ブログ
                        <Icon name='mdi:open-in-new' class="w-5 h-5 bg-transparent" />
                    </a>
                </button>
            </div>

            <div id="skills-content" class="tab-content hidden">
                <Skill />
            </div>

            <div id="projects-content" class="tab-content">
                <Project />
            </div>

            <div id="about-content" class="tab-content">
                <About isName={isName} />
            </div>
        </section>
    </div>
</div>

<script>
    // タブ切り替えのロジック
    const EXPIRE_MINUTES = 5;

    const tabs = document.querySelectorAll('[data-tab]');
    const contents = document.querySelectorAll('.tab-content');

    const savedTab = localStorage.getItem('activeTab');
    const expireTime = localStorage.getItem('activeTabExpire');

    let tabIndex = 0;
    
    if (savedTab && expireTime) {
        const now = new Date().getTime();
        console.log(savedTab, expireTime, now < parseInt(expireTime));
        if (now < parseInt(expireTime)) {
            if (savedTab == "skills") {
                tabIndex = 0;
            } else if (savedTab == "projects") {
                tabIndex = 1;
            } else if (savedTab == "about") {
                tabIndex = 2;
            }
        } else {
            localStorage.removeItem('activeTab');
            localStorage.removeItem('activeTabExpire');
        }
    }

    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            // アクティブなタブのスタイルを更新
            tabs.forEach(t => {
                t.classList.remove('border-blue-600', 'text-blue-600');
                t.classList.add('border-transparent', 'text-gray-600', 'dark:text-gray-400');
            });
            tab.classList.remove('border-transparent', 'text-gray-600', 'dark:text-gray-400');
            tab.classList.add('border-blue-600', 'text-blue-600');

            const tabName = (tab as HTMLElement).dataset.tab;
            if (!tabName) return;

            // コンテンツの表示/非表示を切り替え
            const targetId = `${tabName}-content`;
            contents.forEach(content => {
                content.classList.add('hidden');
                if (content.id === targetId) {
                    content.classList.remove('hidden');
                }
            });

            localStorage.setItem('activeTab', tabName);
            const now = new Date().getTime();
            // now + EXPIRE_MINUTES * 60 * 1000
            localStorage.setItem('activeTabExpire', (now + EXPIRE_MINUTES * 60 * 1000).toString());
        });
    });
    // 初期状態でスキルタブをアクティブに
    (tabs[tabIndex] as HTMLElement).click();
</script>
